Angular 5
    https://www.djamware.com/post/5a0673c880aca7739224ee21/mean-stack-angular-5-crud-web-application-example

1. npm install -g @angular/cli
2. ng -v
       npm install -g typescript
3.1 new app   ===>> ng new nameApp
3.2 exits app ===>>
4. ng serve  ==========> add package.json =>>>  scripts

<!--<% if(listParticipant){
                listParticipant.forEach((element, indx)=> {

                if (statusSingle == element.type) {
                let infoContact = element.infoAccountParticipant.relations.useContacts;
                let statusPart = listStatus[infoContact.attributes.status] ? listStatus[infoContact.attributes.status] : "";
                let classStatusPart = statusPart ? ((statusPart == classStatusHidden) ? classReplaceStatusHidden : statusPart) : statusPart;
                %>
                <li class="contact">
                    <div class="wrap" data-conversation='<%- element.idConversation %>' data-type='<%- element.type%>'
                         data-channel='<%- element.channel_id %>' data-owner='<%- element.creator_id %>'>
                        <span channel='status.<%- element.channel_id %>'
                              class='list-icon-status contact-status <%- element.is_accept_single ? classUndefined : (infoContact.attributes.is_life && classStatusPart) ? classStatusPart : "" %>'></span>
                        <img src='<%- infoContact.attributes.path_img ? infoContact.attributes.path_img : pathImgSingle %>'
                             alt=""/>
                        <div class="meta">
                           <span class="name-notify"><p class="name"><%- infoContact.attributes.middle_name ? infoContact.attributes.middle_name
                                : '&nbsp;' %></p><i class="badges-notify">132</i></span>
                            <p class="preview mood_message"><%- infoContact.attributes.mood_message ?
                                infoContact.attributes.mood_message : "" %></p>
                            &lt;!&ndash;<p class="preview"> <%- element.count %> Remove last</p>&ndash;&gt;
                        </div>
                    </div>
                </li>
                <% } else {
                let infoContactGroup = element.infoAccountParticipant[0].relations.useContacts;
                %>
                <li class="contact">
                    <div class="wrap" data-conversation='<%- element.idConversation %>' data-type='<%- element.type%>'
                         data-channel='<%- element.channel_id %>' data-owner='<%- element.creator_id %>'>
                        <span channel='status.<%- element.channel_id %>' class=""></span>
                        <img src='<%- infoContactGroup.attributes.path_img_group ? infoContactGroup.attributes.path_img_group : pathImgGroup %>'
                             alt=""/>
                        <div class="meta">
                            <span class="name-notify"><p class="name"><%- element.title %></p><i class="badges-notify">132</i></span>
                            <p class="preview"> <%- element.count %> participants</p>
                        </div>
                    </div>
                </li>
                <% }
                });
                }%>-->




NODEJS --> SSL self signed

1. 	openssl genrsa -des3 -out ca.key 2048
1. 	openssl req -new -x509 -days 360 -key ca.key  -out ca.cert

//1. 	openssl genpkey -algorithm RSA -pkeyopt rsa_keygen_bits:2048 -out server.key
//1. 	openssl req -new -key server.key -out server.crt
//1. 	openssl x509 -days 360 -req -in server.crt -CAcreateserial -CA ca.cert -CAkey ca.key -out server.cert

2.	openssl req -newkey rsa:2048 -new -nodes -keyout key.pem -out csr.pem
2.	openssl x509 -req -days 365 -in csr.pem -signkey key.pem -out server.crt

A.1. Generate you server key
    eaxm: openssl genrsa -des3 -out xxxx.key 2048
A.2. Generate your Certificate Signing Request (CSR)
    exam: openssl req -new -key xxxx.key -out yyyy.csr
    ....NOTE: CN='domain or IP"  .... Common Name (eg, YOUR name) []:localhost
A.3 Generate your Certificate
    openssl x509 -req -days 1024 -in server.csr -signkey server.key -out server.crt

FREE===>ssl (90day)   // https://www.instantssl.com/free-ssl-certificate.html?track=3338

1. 	openssl genpkey -algorithm RSA -pkeyopt rsa_keygen_bits:2048 -out client.key
1. 	openssl req -new -key client.key -out client.crt
1. 	openssl x509 -days 360 -req -in client.crt -CAcreateserial -CA ca.cert -CAkey ca.key -out client.cert
1. 	openssl pkcs12 -in client.cert -inkey client.key -export -password pass:123456 -out client.p12

//https://geekflare.com/openssl-commands-certificates/

//https://gist.githubusercontent.com/mtigas/952344/raw/846d41c802548ff0df620241c78bf026663e1b49/gistfile1.md




Private Key and CSR for local.nodejs.vn
Back to CSR list
Certificate Signing Request(CSR)
-----BEGIN CERTIFICATE REQUEST-----
MIICzDCCAbQCAQAwgYYxCzAJBgNVBAYTAlZOMQ0wCwYDVQQIDARGcmVlMQ0wCwYD
VQQHDARGcmVlMQ0wCwYDVQQKDARGcmVlMQ0wCwYDVQQLDARmcmVlMRgwFgYDVQQD
DA9sb2NhbC5ub2RlanMudm4xITAfBgkqhkiG9w0BCQEWEm5nb2N0Ymh5QGdtYWls
LmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJeVGrE/2wxiqi2H
WwYIpRySDWt71/9ZxYteyKpKVMeGqCDM+B3wat5nLjxKyAtRhey+lAbqsBaTmwyS
aYvW3an8UMe1g3lhGhylTBTFDOhiOZjwdYdh/Y+hAVd/Wbi7Af/9JyvzGETwvbHk
r9qWwVQgbkfpB574MzYf6Fwz5CaDCEzamD1myAWPB9lhpf8YlEtwHFtosYOZ6uTB
sT+jJQLZ+S7SHECddwkEfx9NmvNpEfcAzj2fe9d0TY3GjXXNbW3IULzjkF9qcshD
lay1KeFFmCJBiSt8h+2oFsyvjQQZHN+HUbtNT1goTdAOH4bKwbbEOex6FR0G06YB
smmF1ScCAwEAAaAAMA0GCSqGSIb3DQEBCwUAA4IBAQBHnaElK/QwEvuC4xBrrJ5Z
l3UKiJgbsLTdppm7dACzBydwgEaKeVF8oKquWfAoCbp99PwEA55E1aI9KkbFmkuE
3XJjgydaIc7lNz+/lKMH/Po76iaBWFBL9o8yDNJPO+PzYmQEXLPxA391Xo9EdYc5
nF1AFNo3y2sBIpa0OcZXYaGhaI88yUPajDo0ORF+JZ+ikGVGI7gSTlvuijxoPLWK
QD2/9pRBRsnHxvEbD3BZr3GE00bxR1wBOkjg+DaacWRguQyCTcnQ+rAmcdwq8Chx
tDZVT6/Hh8i4XCzIOl3cxfW8UsO0U4b7GH7z6tmCxilAPhzJMt7SugwHVm6K8wYy
-----END CERTIFICATE REQUEST-----

Your Private Server Key


-----BEGIN PRIVATE KEY-----
MIIEvwIBADANBgkqhkiG9w0BAQEFAASCBKkwggSlAgEAAoIBAQCXlRqxP9sMYqot
h1sGCKUckg1re9f/WcWLXsiqSlTHhqggzPgd8GreZy48SsgLUYXsvpQG6rAWk5sM
kmmL1t2p/FDHtYN5YRocpUwUxQzoYjmY8HWHYf2PoQFXf1m4uwH//Scr8xhE8L2x
5K/alsFUIG5H6Qee+DM2H+hcM+QmgwhM2pg9ZsgFjwfZYaX/GJRLcBxbaLGDmerk
wbE/oyUC2fku0hxAnXcJBH8fTZrzaRH3AM49n3vXdE2Nxo11zW1tyFC845BfanLI
Q5WstSnhRZgiQYkrfIftqBbMr40EGRzfh1G7TU9YKE3QDh+GysG2xDnsehUdBtOm
AbJphdUnAgMBAAECggEBAIpX3g2pTt0l61U0NOHz3+WMcs0HMWJu5zlE33Vz855K
ioWtLEH+2zpyByOlyJ9z3vvsD6Oka+OfAaJeug+ToajzjDJIul58Pd2pCx/lm9s3
UoP/6fQOfeGpO1VE+Hj9zFx7ClY1PpAk+6wxIEIq1vVVx/C/gGIY+nxKcMI95dsy
0jo6L8rJU8Fd3DaUkL+1wWeU6wqfnDX15n/nEnQytuivKMRIgaIFPVOtqLMJ3d2Y
lfLPbr1oBSnclWvhuBx2e0GD35dBT7Zxt4rDsHNyEGpfKPohsuPEolJcXKSnmIYf
udbUL1PGRmOL8fHJ56CoboCVCkBmQxyffSay7YPYbOECgYEAxkS0FbKzf4AdQF6U
EvnqtRgqJbmXktbb4L9d5zW/VYwJTAHZL7LE3JkGFDNKgzrwfIWiHguenWShUfEC
Tvi4UzG3xuhlWCjcu3/m2CjI5vp4roPnM/PbSJ70AeYscrvF8VPWMEXea6YSHZff
clK06wZ64sC4mscyIJI38D5OzBECgYEAw7hX+mhjEtsHctPuSgyaU6UcjCJ5sEYb
eXcv1BL3kQNJ9zNlPieIec2DEyhMPh5rOTlhqRdZOitot7iOWaym9BUpv0c5KoW8
cwtiT9tRg5eMpHt9RCWKUr0acB7BMSOSR2kRCmpUCB1vtPTYe+mZoL00m98ngKG0
SKH7f/H7pbcCgYARpkgJrnDAJt1zv3ebANhd6prF5PGTRsEoDqEDVguESAUD2R5G
WrmfkZey8KXvbK2/x/2YgxxJko2xx6yW7xkpfsGHWWS8JlcP8eDQ2UCZHy7jCibo
vwqEOnIqQR0v0XtbckUc4vtbxdrS+5QOj0I/scH6sYE9dgIGWD3WixVkoQKBgQCC
Gk+5cJyzUxAff8v+Q2RvR+mzKdO0ntXyp40Or9EL/6Cyh+K8L3Fkbn28RWRxQq1K
K9/ElHXG2kZRIojWCZQt2seWlFTm9GGyJBYlOYh1Lk/aoxBBNac+muAxOfB4psm9
WJVwVAAqKM8x/jTOIhnypPOMzgmnU1bRlYPmqEf8/wKBgQCkIjga5adREx2n134/
24wb5WoF1VJU6SwGF2wUKkSIYVd/GsUImTMfFl0KK8VG5afzwVrZNS9woEo5TOo9
S6dbLGa4kVA10YH2DZJ5uQHS1189BdCayMCrSgOsKB2N84wL4kCcGLYtel/4qJ+N
oe4kMlKEYeUwSESWEr/mXOgRsg==
-----END PRIVATE KEY-----